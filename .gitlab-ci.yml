before_script:
  - yum install epel-release -y
  - yum install python36 -y
  - yum install python36-pip -y
  - pip3 install pyyaml
#  - pip install hint

.alarm_auther: &alarm_auther |
  alarm () {
    local _msg=$@
    _data="{\"msgtype\":\"text\",\"text\":{\"mentioned_list\":[\"${GITLAB_USER_NAME}\"],\"content\":\"${_msg}\"}}"
    curl https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=${BOT_KEY} -H 'Content-Type: application/json' -d "${_data}"
  }


.checkValid: &checkValid |
  valid () {
    checkResult=$(find . -name "SUMMARY.md" | xargs grep ".md"  | grep '-' | grep -E '\(.*-.*\)' | grep -v "旧文档")  && alarm "仓库：${CI_PROJECT_URL}\n分支：${CI_COMMIT_REF_NAME}\n错误信息：如下内容格式不规范，请调整:\n${checkResult}" ; false || true
  }




.checkHint: &checkHint |
  Hint () {
    ## Parameter: <checkProduction> <author>
    local checkProduction=$1
    local checkDir="./${productionVersion}/${checkProduction}"
    local GITLAB_USER_NAME=$2
    hintResult=$(hint $checkDir | head -n 10) && echo "${hintResult}" || echo "${hintResult}";alarm "${hintResult}"
  }
  
  
stages:
  - check

variables:
  BOT_KEY: "6a8059e0-c7cf-45d3-99b3-33d01e792716"
  productionVersion: "5.1"
  BCS_DOC_AUTHOR: "breakingzhu"

job1:
  stage: check
  script:
    - set -x
    - GITLAB_USER_NAME=$(awk -F '@' '{print $1}' <<< ${GITLAB_USER_EMAIL})
    - *alarm_auther
    - *checkValid
#    - *checkHint
    - valid
#    - Hint bcs ${BCS_DOC_AUTHOR}
    - python3 check_format.py
  only:
    - master
